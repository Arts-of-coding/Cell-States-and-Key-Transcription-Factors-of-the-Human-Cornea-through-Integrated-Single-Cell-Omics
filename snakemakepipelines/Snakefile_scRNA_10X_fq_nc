configfile:
    "config_scRNA_10X.yaml"

#######################################################################################
#rule all for the first block

#fin2 = ['_1', '_2', '_3']

#outfiles = []
#for x in config["samples"]:
 #   for y in fin2:
  #      ## Here you pair f1 and f2. This is a very trivial way of doing it:
   #     if y[1] in x:
    #        outfiles.append(config["data"]+ 'fastq_snakemake/%s%s.fastq' % (x, y))

#wildcard_constraints:
 #   f1 = '|'.join([re.escape(x) for x in config["samples"]]),
  #  f2 = [x for x in fin2],

#rule all:
 #   input:
  #      outfiles,
#######################################################################################
#rule all for the first + second block

fin3 = ['_S1_L001_I1_001', '_S1_L001_R1_001', '_S1_L001_R2_001']

outfiles = []
for x in config["samples"]:
    for y in fin3:
        ## Here you pair f1 and f2. This is a very trivial way of doing it:
        if y[1] in x:
            outfiles.append(config["data"]+ 'fastq_snakemake/%s%s.fastq' % (x, y))

wildcard_constraints:
    f1 = '|'.join([re.escape(x) for x in config["samples"]]),
    f2 = [x for x in fin3],

rule all:
    input:
        outfiles,

#######################################################################################

rule split_files: 
    input:
        expand(config["data"]+ 'SRA_Mai_scrna/sra/{sam}/{sam}/{sam}.sra', sam = config["samples"]) # CHANGE "SRA_Mai_scrna" to your folder of interest after fastqdump

    output:
        config["data"]+ 'fastq_snakemake/{f1}_1.fastq',
        config["data"]+ 'fastq_snakemake/{f1}_2.fastq',
        config["data"]+ 'fastq_snakemake/{f1}_3.fastq',
        #outfiles,

    params:
        outputs = config["data"]+ "fastq_snakemake",

    shell:
        "fastq-dump --outdir {params.outputs} -I --split-files {input}"

rule rename_naming_convention:
    input:
        unam1= config["data"]+ 'fastq_snakemake/{f1}_1.fastq',
        unam2= config["data"]+ 'fastq_snakemake/{f1}_2.fastq',
        unam3= config["data"]+ 'fastq_snakemake/{f1}_3.fastq',
    output:
        renam1= config["data"]+ 'fastq_snakemake/{f1}_S1_L001_I1_001.fastq',
        renam2= config["data"]+ 'fastq_snakemake/{f1}_S1_L001_R1_001.fastq',
        renam3= config["data"]+ 'fastq_snakemake/{f1}_S1_L001_R2_001.fastq',

    params:
        renam1 = lambda wildcards, output: output.renam1.replace('_S1_L001_I1_001', '_1'),
        renam2 = lambda wildcards, output: output.renam2.replace('_S1_L001_R1_001', '_2'),
        renam3 = lambda wildcards, output: output.renam3.replace('_S1_L001_R2_001', '_3'),

    shell:
        """
        (mv {params.renam1} {output.renam1} && sed -i '/.1 / s/.1 / /g' {output.renam1}) ; (mv {params.renam2} {output.renam2} && sed -i '/.2 / s/.2 / /g' {output.renam2}) ; (mv {params.renam3} {output.renam3} && sed -i '/.3 / s/.3 / /g' {output.renam3})
        """
# sed command is used because the header of the fastq files consists of double points: ".1.3" instead of ".1"